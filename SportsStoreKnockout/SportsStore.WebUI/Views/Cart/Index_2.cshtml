@model SportsStore.WebUI.Models.CartIndexViewModel

@{
    ViewBag.Title = "Your Cart";
}

<h2>Your cart</h2>

<pre data-bind="text: ko.toJSON(cartlines, null, 2)"></pre>

<table width="90%" align="center">
    <thead>
        <tr>
        <th>ProductID</th>
            <th align="center">Quantity</th>
            <th align="left">Item</th>
            <th align="right">Price</th>
            <th align="right">Subtotal</th>
        </tr>
    </thead>
    <tbody data-bind="foreach: cartlines">
        <tr>
            <td><span data-bind="text: product().ProductID"></span></td>
            <td align="center"><input data-bind="value: quantity, event: {change: updateQuantity}"/></td>
            <td align="left"><span data-bind="text: product().Name"></span></td>
            <td align="right"><span data-bind="text: product().Price"></span></td>
            <td align="right"><span data-bind="text: subtotal"></span></td>
            <td>
                <input type="button" class="actionButtons" value="Remove" data-bind="click: $parent.remove"/>
            </td>
        </tr>
       
    </tbody>
</table>


<script type="text/javascript">

    $(function() {

        function CartLine(lineItem) {
            var self = this;
            
            self.product = ko.observable(lineItem.Product);
            self.quantity = ko.observable(lineItem.Quantity);

//            self.subtotal = ko.computed(function() {
//                return self.product() ? self.product().Price * parseInt("0" + self.quantity(), 10) : 0;
//            });

            self.subtotal = ko.observable(lineItem.LineTotal);

            self.updateQuantity = function() {
                $.ajax({
                    url: '@Url.Action("UpdateQuantity")',
                    type: 'post',
                    data: ko.toJSON(this),
                    contentType: 'application/json',
                    success: function(result) {
                        if (result.success) {
                            self.subtotal(result.lineTotal);
                        }
                    }
                });
            };
        }

        

        function IndexViewModel(data) {
            var self = this;

            self.model = ko.mapping.fromJS(data);
            
            self.lines = self.model.Cart.Lines;
            self.returnUrl = self.model.ReturnUrl;

            self.cartlines = ko.observableArray([]);
            
            for(var i = 0; i < self.lines().length; i++)
                self.cartlines.push(new CartLine(ko.toJS(self.lines()[i])));
            

            // Methods
            self.remove = function (line) {
                $.ajax({
                    url: '@Url.Action("RemoveItem")',
                    type: 'post',
                    data: ko.toJSON(this),
                    contentType: 'application/json',
                    success: function (result) {
                        
                    }
                })
            }

        }



        var cartIndexViewModel = @Html.Raw(Json.Encode(Model));

        ko.applyBindings(new IndexViewModel(cartIndexViewModel));

    });
    

</script>